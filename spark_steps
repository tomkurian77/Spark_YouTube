import org.apache.spark.sql.SparkSession
val spark = SparkSession.builder().appName("Spark SQL basic example").config("spark.some.config.option", "some-value").getOrCreate()
import spark.implicits._

spark.sql("create  table tom(videoid string,uploader string,erval int,category string,length int,view int,rating int,ratingnum int,comments int,related string) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t' STORED AS TextFile")


spark.sql("create  table video(videoid string,uploader string,erval int,category string,length int,view int,rating int,ratingnum int,comments int,related string) STORED AS ParquetFile")

spark.sql("create  table q1(category string,count int)  STORED AS ParquetFile")
spark.sql("create  table q2(videoid string,rating int)  STORED AS ParquetFile")


spark.sql("LOAD DATA INPATH '/home/tom/youtubedata.txt' OVERWRITE INTO TABLE tom")

val df = spark.sql("SELECT * from tom")

df.filter(df("rating") > 4.0).show()

df.groupBy("category").count().show

sort(desc(sum("TotalDischarges").toString))

df.groupBy(("ProviderState"),("DRGDefinition")).sum("TotalDischarges").sort(desc(sum("TotalDischarges").toString)).show


Question Number Two
df.select(("videoid"),("rating")).sort(desc("rating".toString)).show

Question Number One
val a = df.select("category").groupBy("category").count().sort(desc("count".toString)).limit(5)

a.write.mode(SaveMode.Overwrite).saveAsTable("quest1")

a.write.insertInto("quest1")

import org.apache.spark.sql.SaveMode
df.write.mode(SaveMode.Overwrite).parquet("/home/tom/u")

df.write.parquet("/home/tom/zxzx")
df.write.format("parquet").save("/home/tom/yout")


./bin/spark-submit /home/tom/ques.py



